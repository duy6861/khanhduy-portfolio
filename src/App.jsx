import React, { useState } from 'react';
import './index.css';
import Header from './components/Header';
import Footer from './components/Footer';
import Objective from './components/Objective';
import Education from './components/Education';
import Experience from './components/Experience';
import Skills from './components/Skills';
import Projects from './components/Projects';
import myImage from './image/duy.jpg';

function App() {
  const [isEnglish, setIsEnglish] = useState(true);
  const toggleLanguage = () => setIsEnglish(!isEnglish);

  const profileData = {
    avatar: myImage,
    name: { vi: 'Nguy·ªÖn Kh√°nh Duy', en: 'Nguyen Khanh Duy' },
    contact: {
      phone: '0388804547',
      email: 'duy6861@gmail.com',
      website: 'https://www.linkedin.com/in/duy-nguy%C3%AA%CC%83n-0a680b235/',
      address: { vi: 'Ph∆∞·ªùng Hi·ªáp Th√†nh, Qu·∫≠n 12, TP.HCM', en: 'Hiep Thanh Ward, District 12, Ho Chi Minh City' }
    },
    objective: {
      vi: [
        "Mong mu·ªën l√†m vi·ªác trong m√¥i tr∆∞·ªùng chuy√™n nghi·ªáp v√† n√¢ng cao k·ªπ nƒÉng l√†m vi·ªác nh√≥m.",
        "H√°o h·ª©c ƒë√≥ng g√≥p v√†o s·ª± th√†nh c√¥ng v√† ph√°t tri·ªÉn l√¢u d√†i c·ªßa c√¥ng ty.",
        "Kh√¥ng ng·ª´ng n√¢ng cao tr√¨nh ƒë·ªô ti·∫øng Anh ƒë·ªÉ giao ti·∫øp t·ªët h∆°n v√† thƒÉng ti·∫øn trong s·ª± nghi·ªáp.",
        "ƒê·∫∑t m·ª•c ti√™u th√†nh th·∫°o c√°c k·ªπ nƒÉng l·∫≠p tr√¨nh v√† c·∫≠p nh·∫≠t c√°c c√¥ng ngh·ªá m·ªõi nh·∫•t.",
        "Tr·ªü th√†nh m·ªôt l·∫≠p tr√¨nh vi√™n full-stack, th√†nh th·∫°o c·∫£ c√¥ng ngh·ªá frontend v√† backend ƒë·ªÉ x√¢y d·ª±ng c√°c ·ª©ng d·ª•ng web ho√†n ch·ªânh, c√≥ kh·∫£ nƒÉng m·ªü r·ªông v√† hi·ªáu su·∫•t cao."
      ],
      en: [
        "Aspire to work in a professional environment and enhance teamwork skills.",
        "Eager to contribute to the company's success and long-term growth.",
        "Strive to improve English proficiency for better communication and career advancement.",
        "Aim to master programming skills and stay updated with the latest technologies.",
        "Become a full-stack developer, mastering both frontend and backend technologies to build complete, scalable, and high-performance web applications."
      ]
    },
    education: [
      {
        vi: { title: 'ƒê·∫°i h·ªçc Hoa Sen (T·ªët nghi·ªáp)', date: '2018 - 2024', major: 'K·ªπ thu·∫≠t ph·∫ßn m·ªÅm' },
        en: { title: 'Hoa Sen University (Graduated)', date: '2018 - 2024', major: 'Software Engineering' }
      }
    ],
    experience: [
      {
        vi: {
          company: 'DXC Technology Vietnam',
          position: 'Th·ª±c t·∫≠p sinh',
          date: 'Th√°ng 5 2021 - Th√°ng 9 2023'
        },
        en: {
          company: 'DXC Technology Vietnam',
          position: 'Intern',
          date: 'May 2021 - Sep 2023'
        }
      },
      {
        vi: {
          company: 'DXC Technology Vietnam',
          position: 'Chuy√™n vi√™n ph√¢n t√≠ch l·∫≠p tr√¨nh',
          date: 'Th√°ng 9 2021 - Th√°ng 9 2023'
        },
        en: {
          company: 'DXC Technology Vietnam',
          position: 'Associate Professional Programmer Analyst',
          date: 'Sep 2021 - Sep 2023'
        }
      }
    ],
    skills: {
      language: { vi: 'Ti·∫øng Anh', en: 'English' },
      programmingLanguage: { vi: 'Ng√¥n ng·ªØ l·∫≠p tr√¨nh', en: 'Programming language' },
      frameworks: { vi: 'Frameworks & Th∆∞ vi·ªán', en: 'Frameworks & Libraries' },
      stateManagement: { vi: 'Qu·∫£n l√Ω tr·∫°ng th√°i', en: 'State Management' },
      uiFrameworks: { vi: 'UI Frameworks & Styling', en: 'UI Frameworks & Styling' },
      backend: { vi: 'Ph√°t tri·ªÉn Backend', en: 'Backend Development' },
      api: { vi: 'API & X·ª≠ l√Ω d·ªØ li·ªáu', en: 'API & Data Handling' },
      versionControl: { vi: 'Ki·ªÉm so√°t phi√™n b·∫£n', en: 'Version Control' },
      testing: { vi: 'Ki·ªÉm th·ª≠ & G·ª° l·ªói', en: 'Testing & Debugging' },
      softSkills: { vi: 'K·ªπ nƒÉng m·ªÅm', en: 'Soft skills' },
      languageSkills: [
        { name: { vi: 'Ti·∫øng Anh', en: 'English' }, proficiency: { vi: 'Th√†nh th·∫°o chuy√™n nghi·ªáp', en: 'Professional proficiency' } },
        { name: { vi: 'Ti·∫øng Vi·ªát', en: 'Vietnamese' }, proficiency: { vi: 'B·∫£n ng·ªØ', en: 'Native proficiency' } },
      ],
      programmingLanguages: ['C#', 'Javascript', 'HTML 5', 'CSS', 'C++(Basic)', 'java(Basic)', 'php(Basic)'],
      frameworksAndLibraries: ['ReactJS', 'React-Native', 'Next.js (Basic)', 'jQuery', 'VueJS', 'Angular(basic)'],
      stateManagementTools: ['Redux', 'Context API', 'Hooks', 'Zustand'],
      uiFrameworksAndStylingTools: ['Tailwind CSS', 'MUI', 'Bootstrap', "Antdesign", 'Styled Components', 'Sass'],
      backendTechnologies: ['Node.js', '.NET Core (Basic)', 'ASP.NET (Basic)'],
      apiAndDataHandlingTools: ['RESTful API', 'Axios(basic)'],
      versionControlTools: ['Git', 'GitHub', 'Bitbucket'],
      testingAndDebuggingTools: ['Chrome Dev Tools'],
      softSkillsList: ['Researching', 'Problem Solving', 'Teamwork', 'Communication', 'Self-Learning'],
    },
    projects: [
      {
        vi: {
          name: 'Trang web qu·∫£n l√Ω th√¥ng tin nh√¢n vi√™n',
          tech: 'Angular framework',
          link: 'https://proect-1463.web.app/',
          description: 'Trang ƒëƒÉng nh·∫≠p/ƒëƒÉng k√Ω, b·∫£ng ƒëi·ªÅu khi·ªÉn th√¥ng tin nh√¢n vi√™n, th√™m/x√≥a/s·ª≠a th√¥ng tin nh√¢n vi√™n'
        },
        en: {
          name: 'Employee information management website',
          tech: 'Angular framework',
          link: 'https://proect-1463.web.app/',
          description: 'Login/registration page, employee information panel, add/delete/edit employee information'
        }
      },
      {
        vi: {
          name: 'S√†n gi√°o d·ª•c th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠',
          tech: 'React, Redux, Firebase ...',
          link: 'https://edumart-git-use-redux-toolkit-duys-projects-f4eed92b.vercel.app/',
          description: 'Trang ƒëƒÉng nh·∫≠p/ƒëƒÉng k√Ω, b·∫£ng hi·ªán th·ªã th√¥ng tin c√°c kh√≥a h·ªçc, T√¨m ki·∫øm S·∫£n ph·∫©m, danh s√°ch y√™u th√≠ch, l·ªçc theo gi√°, ch√°t bot, l·ªãch s·ª≠ xem ....'
        },
        en: {
          name: 'E-commerce Education Platform',
          tech: 'React, Redux, Firebase ...',
          link: 'https://edumart-henna.vercel.app/',
          description: 'Login/registration page, course information dashboard, product search, wishlist, price filtering, chatbot, viewing history, and more.'
        }
      },
      {
        vi: { name: 'Trang web b√°n qu·∫ßn √°o', tech: 'React ...', link: 'https://clothes-web-duy.vercel.app/' },
        en: { name: 'Clothing website', tech: 'React', link: 'https://clothes-web-duy.vercel.app/' }
      },
      {
        vi: {
          name: 'UnityGame: Knight\'s Adventure',
          tech: 'Unity',
          description: 'thanh m√°u, ƒëi·ªÉm cao, th√°p ph√°o, k·∫ª th√π, qua m√†n, di chuy·ªÉn'
        },
        en: {
          name: 'UnityGame: Knight\'s Adventure',
          tech: 'Unity',
          description: 'health bar, high score, gun turret, enemies, level pass, move'
        }
      }
    ],
    zurichTeam: {
      vi: {
        name: 'Zurich UK',
        teamSize: 'kho·∫£ng 50 ng∆∞·ªùi',
        position: 'Frontend developer',
        responsibility: [
          // üëá GI·ªÆ NGUY√äN PH·∫¶N C≈®
          'S·ª≠a l·ªói v√† t·ªëi ∆∞u h√≥a UI & c√°c t√≠nh nƒÉng tr√™n trang web. X√°c ƒë·ªãnh, kh·∫Øc ph·ª•c s·ª± c·ªë v√† gi·∫£i quy·∫øt c√°c v·∫•n ƒë·ªÅ UI/UX ƒë·ªÉ ƒë·∫£m b·∫£o tr·∫£i nghi·ªám ng∆∞·ªùi d√πng li·ªÅn m·∫°ch.',
          'Ph√°t tri·ªÉn v√† tri·ªÉn khai UI d·ª±a tr√™n c√°c thi·∫øt k·∫ø ƒë∆∞·ª£c giao. Chuy·ªÉn ƒë·ªïi c√°c thi·∫øt k·∫ø t·ª´ Figma, Adobe XD ho·∫∑c c√°c c√¥ng c·ª• thi·∫øt k·∫ø kh√°c th√†nh giao di·ªán web t∆∞∆°ng t√°c v√† th√¢n thi·ªán v·ªõi ng∆∞·ªùi d√πng. C·ªông t√°c ch·∫∑t ch·∫Ω v·ªõi c√°c nh√† thi·∫øt k·∫ø v√† nh√† ph√°t tri·ªÉn backend ƒë·ªÉ duy tr√¨ t√≠nh nh·∫•t qu√°n v·ªÅ thi·∫øt k·∫ø v√† ch·ª©c nƒÉng.',
          'H·ªó tr·ª£ ki·ªÉm tra v√† ƒë·∫£m b·∫£o ch·∫•t l∆∞·ª£ng s·∫£n ph·∫©m. L√†m vi·ªác v·ªõi ng∆∞·ªùi ki·ªÉm tra (nh√≥m QA) ƒë·ªÉ x√°c ƒë·ªãnh v√† gi·∫£i quy·∫øt c√°c v·∫•n ƒë·ªÅ tr∆∞·ªõc khi tri·ªÉn khai.',

          // üëá TH√äM PH·∫¶N M·ªöI V√ÄO CU·ªêI
          'X√¢y d·ª±ng giao di·ªán workflow ƒëa b∆∞·ªõc: Ph√°t tri·ªÉn 6 trang ch·ª©c nƒÉng: ToleranceCheckPage, ProductDetailsPage, CategoriesPage, ApplyPage, MembersPage, MemberLTAPage. Qu·∫£n l√Ω ƒëi·ªÅu h∆∞·ªõng c√≥ ƒëi·ªÅu ki·ªán, c·∫£nh b√°o khi r·ªùi trang ch∆∞a l∆∞u, v√† ƒëi·ªÅu khi·ªÉn lu·ªìng nghi·ªáp v·ª• (ti·∫øp t·ª•c, quay l·∫°i, l∆∞u & tho√°t).',
          'X·ª≠ l√Ω form v√† validation ph·ª©c t·∫°p: Tri·ªÉn khai h·ªá th·ªëng validation nhi·ªÅu t·∫ßng cho c√°c quy t·∫Øc nghi·ªáp v·ª• b·∫£o hi·ªÉm (ki·ªÉm tra tolerance, % ch√™nh l·ªách, s·ªë l∆∞·ª£ng th√†nh vi√™n, ƒë·ªãnh d·∫°ng ng√†y/th√°ng, m√£ ngh·ªÅ nghi·ªáp...). T·ª± ƒë·ªông ƒë·ªãnh d·∫°ng d·ªØ li·ªáu (postcodes, %, ng√†y sinh), hi·ªÉn th·ªã l·ªói inline v√† t·ªïng h·ª£p l·ªói. X·ª≠ l√Ω edge case: focus t·ª± ƒë·ªông, disable/enable n√∫t, c·∫£nh b√°o khi thay ƒë·ªïi lo·∫°i ch√≠nh s√°ch.',
          'T√≠ch h·ª£p upload/download file Excel: Cho ph√©p ng∆∞·ªùi d√πng upload file Excel ‚Üí chuy·ªÉn sang base64 ‚Üí g·ªçi API ‚Üí validate t·ª´ng d√≤ng ‚Üí hi·ªÉn th·ªã l·ªói chi ti·∫øt. H·ªó tr·ª£ download template v√† xu·∫•t d·ªØ li·ªáu hi·ªán t·∫°i ra file. X·ª≠ l√Ω dataset l·ªõn (1000+ d√≤ng) v·ªõi ph√¢n trang, l·ªçc, s·∫Øp x·∫øp ph√≠a client.',
          'Qu·∫£n l√Ω state v√† t√≠ch h·ª£p API: S·ª≠ d·ª•ng Redux ƒë·ªÉ qu·∫£n l√Ω state to√†n c·ª•c: quote, categories, members, loading status. G·ªçi API b·∫•t ƒë·ªìng b·ªô (async/await) v·ªõi x·ª≠ l√Ω l·ªói, loading state, v√† race condition (d√πng c·ªù isMounted). T·ª± ƒë·ªông lock/unlock quote khi v√†o/ra trang ƒë·ªÉ tr√°nh xung ƒë·ªôt d·ªØ li·ªáu.',
          'Th√†nh ph·∫ßn ƒë·ªông v√† t√°i s·ª≠ d·ª•ng: X√¢y d·ª±ng h·ªá th·ªëng tab ƒë·ªông (CategoryTabs) cho ph√©p th√™m/x√≥a/s·ª≠a danh m·ª•c, k√®m validation ri√™ng cho t·ª´ng tab. T·∫°o modal confirm t√πy ch·ªânh cho c√°c h√†nh ƒë·ªông quan tr·ªçng: Accept Tolerance, Push to Rate Review, Take Off Portal. D√πng useRef, useEffect, useCallback ƒë·ªÉ t·ªëi ∆∞u hi·ªáu su·∫•t v√† qu·∫£n l√Ω side effect.',
          'T·ªëi ∆∞u tr·∫£i nghi·ªám ng∆∞·ªùi d√πng (UX): T·ª± ƒë·ªông focus v√†o tr∆∞·ªùng c·∫ßn nh·∫≠p sau khi th√™m/x√≥a. Ph√¢n trang, l·ªçc, s·∫Øp x·∫øp b·∫£ng d·ªØ li·ªáu l·ªõn. Hi·ªÉn th·ªã skeleton, loading spinner, v√† th√¥ng b√°o l·ªói th√¢n thi·ªán. T√≠ch h·ª£p Tealium ƒë·ªÉ theo d√µi h√†nh vi ng∆∞·ªùi d√πng (s·ªë l∆∞·ª£ng danh m·ª•c, thao t√°c eligibility...).',
          'Ki·∫øn th·ª©c chuy√™n s√¢u v·ªÅ nghi·ªáp v·ª• b·∫£o hi·ªÉm: Hi·ªÉu r√µ c√°c lo·∫°i s·∫£n ph·∫©m: Group Life (GL), Group Income Protection (GIP), Registered/Excepted Trust. X·ª≠ l√Ω logic nghi·ªáp v·ª•: tolerance breach, calculation method (salary multiplier vs fixed benefit), eligibility criteria, occupation code check. ƒê·∫£m b·∫£o tu√¢n th·ªß quy ƒë·ªãnh: kh√¥ng cho ph√©p l∆∞u n·∫øu d·ªØ li·ªáu kh√¥ng h·ª£p l·ªá, c·∫£nh b√°o khi c√≥ r·ªßi ro (occupation code 7).'
        ],
        tech: 'ReactJs, Sitecore'
      },
      en: {
        name: 'Zurich UK',
        teamSize: 'around 50 or so',
        position: 'Frontend developer',
        responsibility: [
          // üëá GI·ªÆ NGUY√äN PH·∫¶N C≈®
          'Fix errors and optimize UI & features on the website. Identify, troubleshoot, and resolve UI/UX issues to ensure a seamless user experience.',
          'Develop and implement UI based on assigned designs. Convert designs from Figma, Adobe XD, or other design tools into interactive and user-friendly web interfaces. Collaborate closely with designers and backend developers to maintain design and functionality consistency.',
          'Support testing and ensure product quality. Work with testers (QA team) to identify and resolve issues before deployment.',

          // üëá TH√äM PH·∫¶N M·ªöI V√ÄO CU·ªêI
          'Built multi-step workflow interfaces: Developed 6 functional pages ‚Äî ToleranceCheckPage, ProductDetailsPage, CategoriesPage, ApplyPage, MembersPage, MemberLTAPage. Implemented conditional navigation, unsaved change warnings, and business flow controls (continue, back, save & exit).',
          'Handled complex form validation: Deployed multi-layer validation logic for insurance business rules (tolerance checks, percentage variance, member count, date/month formatting, occupation codes, etc.). Automated data formatting (postcodes, percentages, birth dates), displayed inline and aggregated errors. Managed edge cases: auto-focus, dynamic button enable/disable, and policy type change alerts.',
          'Integrated Excel file upload/download: Enabled users to upload Excel files ‚Üí convert to base64 ‚Üí call API ‚Üí validate row-by-row ‚Üí display detailed errors. Supported template downloads and exporting current data to files. Handled large datasets (1,000+ rows) with client-side pagination, filtering, and sorting.',
          'Managed state and integrated APIs: Used Redux to manage global state (quote, categories, members, loading status). Called asynchronous APIs (async/await) with error handling, loading states, and race condition mitigation (using isMounted flags). Automatically locked/unlocked quotes on page entry/exit to prevent data conflicts.',
          'Designed dynamic and reusable components: Built dynamic CategoryTabs allowing add/edit/delete categories with per-tab validation. Created custom modal confirmations for critical actions: Accept Tolerance, Push to Rate Review, Take Off Portal. Optimized performance and managed side effects using useRef, useEffect, and useCallback.',
          'Enhanced user experience (UX): Auto-focused input fields after adding/deleting items. Implemented pagination, filtering, and sorting for large data tables. Displayed skeleton loaders, spinners, and user-friendly error messages. Integrated Tealium to track user behavior (number of categories, eligibility actions, etc.).',
          'Deep insurance domain knowledge: Understood key products: Group Life (GL), Group Income Protection (GIP), Registered/Excepted Trust. Implemented business logic: tolerance breach detection, calculation methods (salary multiplier vs. fixed benefit), eligibility criteria, and occupation code validation. Ensured regulatory compliance: blocked saves on invalid data and issued warnings for high-risk occupation codes (e.g., code 7).'
        ],
        tech: 'ReactJs, Sitecore'
      }
    },
    manulifeTeam: {
      vi: {
        name: 'Manulife',
        teamSize: 'kho·∫£ng 50 ng∆∞·ªùi',
        position: 'Frontend developer',
        responsibility: [
          'S·ª≠a l·ªói v√† t·ªëi ∆∞u h√≥a UI & c√°c t√≠nh nƒÉng tr√™n trang web. X√°c ƒë·ªãnh, kh·∫Øc ph·ª•c s·ª± c·ªë v√† gi·∫£i quy·∫øt c√°c v·∫•n ƒë·ªÅ UI/UX ƒë·ªÉ ƒë·∫£m b·∫£o tr·∫£i nghi·ªám ng∆∞·ªùi d√πng li·ªÅn m·∫°ch.',
          'H·ªó tr·ª£ ki·ªÉm tra v√† ƒë·∫£m b·∫£o ch·∫•t l∆∞·ª£ng s·∫£n ph·∫©m. L√†m vi·ªác v·ªõi ng∆∞·ªùi ki·ªÉm tra (nh√≥m QA) ƒë·ªÉ x√°c ƒë·ªãnh v√† gi·∫£i quy·∫øt c√°c v·∫•n ƒë·ªÅ tr∆∞·ªõc khi tri·ªÉn khai.'
        ],
        tech: 'ReactJs'
      },
      en: {
        name: 'Manulife',
        teamSize: 'around 50 or so',
        position: 'Frontend developer',
        responsibility: [
          'Fix errors and optimize UI & features on the website. Identify, troubleshoot, and resolve UI/UX issues to ensure a seamless user experience.',
          'Support testing and ensure product quality. Work with testers (QA team) to identify and resolve issues before deployment.'
        ],
        tech: 'ReactJs'
      }
    }
  };

  return (
    <div className="bg-gradient-to-r from-gray-900 via-black to-gray-900 min-h-screen text-white scroll-smooth">
      <div className="container mx-auto px-4 sm:px-6 lg:px-8">
        {/* Language Toggle Button */}
        <div className="fixed top-24 right-6 z-50 flex items-center scale-100 sm:scale-110">
          <span className="text-white mr-3 text-sm font-medium">
            {isEnglish ? 'English' : 'Ti·∫øng Vi·ªát'}
          </span>
          <label htmlFor="language-toggle" className="inline-flex items-center cursor-pointer">
            <span className="sr-only">Toggle Language</span>
            <div className="relative">
              <input
                id="language-toggle"
                type="checkbox"
                checked={isEnglish}
                onChange={toggleLanguage}
                className="hidden"
              />
              <div className="toggle-container w-12 h-6 bg-gray-300 rounded-full shadow-inner"></div>
              <div
                className={`toggle-circle absolute top-1 left-1 w-4 h-4 bg-white rounded-full transition-all duration-300 ease-in-out ${isEnglish ? 'translate-x-6' : ''
                  }`}
              ></div>
            </div>
          </label>
        </div>

        {/* Main Content */}
        <Header avatar={myImage} name={profileData.name[isEnglish ? 'en' : 'vi']} contact={profileData.contact} isEnglish={isEnglish} />

        <section id="objective" className="pt-4">
          <Objective objective={profileData.objective[isEnglish ? 'en' : 'vi']} isEnglish={isEnglish} />
        </section>

        <section id="education" className="pt-4">
          <Education education={profileData.education} isEnglish={isEnglish} />
        </section>

        <section id="experience" className="pt-4">
          <Experience
            experience={profileData.experience}
            zurichTeam={profileData.zurichTeam}
            manulifeTeam={profileData.manulifeTeam}
            isEnglish={isEnglish}
          />
        </section>

        <section id="skills" className="pt-4">
          <Skills skills={profileData.skills} isEnglish={isEnglish} />
        </section>

        <section id="projects" className="pt-4">
          <Projects projects={profileData.projects} isEnglish={isEnglish} />
        </section>
      </div>
      {/* Th√™m Footer */}
      <Footer isEnglish={isEnglish} />
    </div>
  );
}

export default App;